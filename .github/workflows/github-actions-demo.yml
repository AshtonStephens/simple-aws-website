name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  pull_request:
    branches:
    - pipeline-mayhem
      # Pull request types can be found here:
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
    types: [opened, synchronize, reopened]
  push:
    branches:
    - pipeline-mayhem

jobs:

  # #################################################
  # Python code test and lint
  # #################################################

  Lint-And-Test-Python-Lambda:
    # https://github.com/marketplace/actions/setup-python
    # https://github.com/marketplace/actions/install-python-poetry
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lambda
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
      - run: python --version
      - run: poetry --version
      - run: poetry install
      - run: poetry run pylint src tests
      - run: poetry run pytest

  # #################################################
  # Test cloud formation template
  # #################################################

  Test-Cloud-Formation-Template:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cloud_formation
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Set up node 18.16
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - run: npm install
      - run: npm run build
      - run: npm run test

  # #################################################
  # Test API TypeScript Autogeneration wth OpenAPI3
  # #################################################

  Test-Autogenerate-Api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api_definition
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Setup Java 20
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 20
      - name: Set up node 18.16
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0
      - run: npm install
      - run: npm run build

  # #################################################
  # Deploy to CloudFormation
  # #################################################

  Deploy-To-Cloud-Formation:
    runs-on: ubuntu-latest
    needs:
      - Lint-And-Test-Python-Lambda
      - Test-Cloud-Formation-Template
      - Test-Autogenerate-Api
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Set up node 18.16
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0

      # Needed for API Autogenerator
      - name: Setup Java 20
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 20

      - name: Build autogenerated api client
        working-directory: ./api_definition
        run: npm install && npm run build

      - name: Build website webpack bundle
        working-directory: ./website
        run: npm install && npm run build

      - name: Build cloudformation template
        working-directory: ./cloud_formation
        run: npm install && npm run build

      - name: Globally install CDK
        run: npm install -g aws-cdk@2.81.0

      - name: Deploy environment
        run: cdk deploy
        env:
          # AWS access keys with permission to deploy to cloud formation
          # NOTE: I need full access to the repo to store secrets. This is a
          # Temporary measure.
          AWS_ACCESS_KEY_ID: AKIA2ZSOLEBV5PGPKB66
          AWS_SECRET_ACCESS_KEY: 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
          # AWS Deployment Account and Configurations
          AWS_ACCOUNT: 742119907435
          AWS_REGION: us-west-2
          AWS_STAGE: beta

      # TODO: Make api
      # https://github.com/marketplace/actions/aws-cdk-github-actions
      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          working_dir: ./cloud_formation
        env:
          # AWS access keys with permission to deploy to cloud formation
          # NOTE: I need full access to the repo to store secrets. This is a
          # Temporary measure.
          AWS_ACCESS_KEY_ID: AKIA2ZSOLEBV5PGPKB66
          AWS_SECRET_ACCESS_KEY: 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
          # AWS Deployment Account and Configurations
          AWS_ACCOUNT: 742119907435
          AWS_REGION: us-west-2
          AWS_STAGE: beta



  #     # https://github.com/marketplace/actions/aws-cdk-github-actions
  #     # - name: cdk deploy
  #     #   uses: youyo/aws-cdk-github-actions@v2
  #     #   with:
  #     #     cdk_subcommand: 'deploy'
  #     #     working_dir: ./cloud_formation
  #     #   env:
  #     #     # AWS access keys with permission to deploy to cloud formation
  #     #     # NOTE: I need full access to the repo to store secrets. This is a
  #     #     # Temporary measure.
  #     #     AWS_ACCESS_KEY_ID: AKIA2ZSOLEBV5PGPKB66
  #     #     AWS_SECRET_ACCESS_KEY: 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
  #     #     # AWS Deployment Account and Configurations
  #     #     AWS_ACCOUNT: 742119907435
  #     #     AWS_REGION: us-west-2
  #     #     AWS_STAGE: beta



  # Test-Website:
  #   runs-on: ubuntu-latest
  #   needs: [Lint-Python-Server-Lambda]
  #   # Don't bother testing if it doesn't pass linting.
  #   steps:
  #     - run: echo "This is Test-Python-Server-Lambda"

  # Test-Full-Deployment-Maybe:
  #   runs-on: ubuntu-latest
  #   needs: [Test-Python-Server-Lambda, Test-Cloud-Formation-Template, Test-Website]
  #   steps:
  #     - run: echo "This is Job-That-Requires-Other-Two"
  #     - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
  #     - name: List files in the repository
  #       run: |
  #         ls ${{ github.workspace }}
  #     - run: echo "üçè This job's status is ${{ job.status }}."
